# Generated by Django 5.2.6 on 2025-09-13 02:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('numero_prontuario', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioCustomizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('PROFESSOR', 'Professor'), ('ALUNO_N2', 'Aluno Nível 2'), ('ALUNO', 'Aluno'), ('FUNCIONARIO_LAB', 'Funcionário do Laboratório')], default='ALUNO', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Caso',
            fields=[
                ('id_laboratorio', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('data_recebimento', models.DateField()),
                ('solicitante', models.CharField(max_length=255)),
                ('diagnostico_sugerido', models.TextField(blank=True, null=True)),
                ('observacoes_clinicas', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('RECEBIDO', 'Recebido'), ('EM_MACROSCOPIA', 'Em Macroscopia'), ('EM_MICROSCOPIA', 'Em Microscopia'), ('AGUARDANDO_APROVACAO', 'Aguardando Aprovação'), ('FINALIZADO', 'Finalizado')], default='RECEBIDO', max_length=25)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_finalizacao', models.DateTimeField(blank=True, null=True)),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casos_criados', to=settings.AUTH_USER_MODEL)),
                ('responsavel_final', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casos_finalizados', to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casos', to='laudos.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='LaudoMacroscopico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_fragmentos', models.PositiveIntegerField(default=1)),
                ('dim_comprimento_cm', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dim_largura_cm', models.DecimalField(decimal_places=2, max_digits=5)),
                ('dim_altura_cm', models.DecimalField(decimal_places=2, max_digits=5)),
                ('cor', models.CharField(max_length=100)),
                ('consistencia', models.CharField(max_length=100)),
                ('forma', models.CharField(max_length=100)),
                ('texto_gerado', models.TextField()),
                ('texto_editado', models.TextField(blank=True, null=True)),
                ('caso', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='laudo_macroscopico', to='laudos.caso')),
            ],
        ),
        migrations.CreateModel(
            name='LaudoMicroscopico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags_selecionadas', models.JSONField(default=list)),
                ('texto_base_gerado', models.TextField()),
                ('texto_final', models.TextField()),
                ('conclusao', models.TextField()),
                ('notas', models.TextField(blank=True, null=True)),
                ('caso', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='laudo_microscopico', to='laudos.caso')),
            ],
        ),
        migrations.CreateModel(
            name='LogAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('detalhes', models.TextField()),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
